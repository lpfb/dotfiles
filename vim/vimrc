set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
Plugin 'scrooloose/nerdtree'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'tomtom/tcomment_vim'
Plugin 'flazz/vim-colorschemes'
Plugin 'vim-syntastic/syntastic'
Plugin 'nvie/vim-flake8'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'Yggdroot/indentLine'
Plugin 'sheerun/vim-polyglot'
Plugin 'joshdick/onedark.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'morhetz/gruvbox'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required


"------------------------------------------------------------------------------
"                        PLUGINS CONFIGURATIONS
"------------------------------------------------------------------------------

"---------------------------
" Functions
"---------------------------
"Diff
function! DiffToggle()
  if &diff
    diffoff
  else
    diffthis
  endif
endfunction

"----------------------------------
" Mappgin <leader>
"----------------------------------
let mapleader = "'"

"----------------------------------
" Python Sintax Check and PEP8
"----------------------------------
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let  g:syntastic_python_checkers           =  ['flake8']
let  g:syntastic_always_populate_loc_list  =  1
let  g:syntastic_auto_loc_list             =  1
let  g:syntastic_check_on_open             =  1
let  g:syntastic_check_on_wq               =  0

"----------------------------------
" Indentation guide lines
"----------------------------------
let  g:indentLine_color_term    =  237
let  g:indentLine_bgcolor_term  =  16
let  g:indentLine_bgcolor_gui   =  '#FF5F00'
let  g:indentLine_char          =  'Â¦'
" Impruving mkarkdown formatting character visualization
" ref: https://vi.stackexchange.com/questions/7258/how-do-i-prevent-vim-from-hiding-symbols-in-markdown-and-json
let g:indentLine_setConceal = 2
" default ''.
"    n for Normal mode
"    v for Visual mode
"    i for Insert mode
"    c for Command line editing, for 'incsearch'
let g:indentLine_concealcursor = "n" " formatting characters not visible only in normal mode

"---------------------------
" General Configurations
"---------------------------
" Showing unwanted spaces
let c_space_errors=1
set laststatus=2
set encoding=utf-8
set tabstop=4
set shiftwidth=4
set expandtab
set smartindent
set autoindent
set mouse=n
set ruler
set wrap "Wrap lines

set cursorline " enable line high light at cursor position. WARNING: this
" feature uses too much CPU

syntax on
set hlsearch
set listchars=eol:$,tab:>-,trail:~,extends:>,precedes:<

"set foldmethod=syntax
":VerilogErrorFormat ncverilog 2


"---------------------------
" Color configurations
"---------------------------

set t_Co=256
autocmd vimenter * colorscheme gruvbox
highlight ColorColumn ctermbg=0 guibg=red

set bg=dark
let g:airline_theme = 'deus'
let g:gruvbox_contrast_dark = 'medium'


"---------------------------
"Key map settings
"---------------------------
map <F1>   :set nonumber!<CR>
map <F2>   :NERDTreeToggle<CR>
map <F3>   :set list<CR>
map <F4>   :set nolist<CR>
map <F5>   :set relativenumber<CR>
map <F6>   :set norelativenumber<CR>
" reformat for a nice column layout
map <F7>   :!column -t<CR>
" Enable/Disable syntax check
map <F8>   :SyntasticToggleMode<CR>
" Reload and edit vimrc configuration
map <F10>   :source ~/.vimrc<CR>
map <F11>   :tabe ~/.vimrc<CR>
" Salve file
map <C-s>   :w!<CR>

"Copy the selected data to linux clipboard. This option onlu works if vim
"--version reposts +xterm_clipboard, if it reposts -xterm_clipboard you do not
"have suport.
map <C-c> "+y<CR>

"Switching paste mode to prevent autoident
set pastetoggle=<F2>

" Run Ctags
nmap <C-F11> :call RunCtags()<CR>

" Remove the Windows ^M - when the encodings gets messed up
noremap <Leader>m mmHmt:%s/<C-V><cr>//ge<cr>'tzt'm

" Remap <:> to <;> With it, it is possible to execute commands without press shift
nnoremap ; :

" Navigating betwenn tabs 
nnoremap <leader>1 1gt 
nnoremap <leader>2 2gt 
nnoremap <leader>3 3gt 
nnoremap <leader>4 4gt 
nnoremap <leader>5 5gt 
nnoremap <leader>6 6gt 
nnoremap <leader>7 7gt 
nnoremap <leader>8 8gt 
nnoremap <leader>9 9gt 
"Previous and next window 
nnoremap <leader>m gt 
nnoremap <leader>n gT

"Buffer navigation
nnoremap <Tab> :buffers<CR>:buffer<Space>
