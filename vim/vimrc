set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
Plugin 'scrooloose/nerdtree'
Plugin 'vim-airline/vim-airline'
Plugin 'tomtom/tcomment_vim'
Plugin 'morganp/vim-SystemVerilogUVM.vim'
Plugin 'flazz/vim-colorschemes'
Plugin 'vim-syntastic/syntastic'
Plugin 'nvie/vim-flake8'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'Yggdroot/indentLine'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

"------------------------------------------------------------------------------
"                        PLUGINS CONFIGURATIONS
"------------------------------------------------------------------------------

"---------------------------
" Functions
"---------------------------

"Diff
function! DiffToggle()
  if &diff
    diffoff
  else
    diffthis
  endif
endfunction

"----------------------------------
" Python Sintax Check and PEP8
"----------------------------------
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_python_checkers = ['flake8']
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

"----------------------------------
" Identation guide lines
"----------------------------------
" let g:indentLine_setColors = 0
let g:indentLine_color_term = 237
let g:indentLine_bgcolor_term = 16
let g:indentLine_bgcolor_gui = '#FF5F00'
let g:indentLine_char = 'Â¦'
" let g:indentLine_char = '.'

"---------------------------
" General Configurations
"---------------------------

set laststatus=2
set encoding=utf-8
set tabstop=4
set shiftwidth=4
set expandtab
set smartindent
set autoindent
set mouse=n
set ruler
set wrap "Wrap lines

set cursorline " enable line high light at cursor position

syntax on
set hlsearch
set listchars=eol:$,tab:>-,trail:~,extends:>,precedes:<

"set foldmethod=syntax
":VerilogErrorFormat ncverilog 2


"---------------------------
" Gui options
"---------------------------

set t_Co=256
colorscheme CandyPaper
highlight ColorColumn ctermbg=0 guibg=red


"---------------------------
"Keymap settings
"---------------------------
map <F1>   :set nonumber!<CR>
map <F2>   :NERDTreeToggle<CR>
map <F3>   :set list<CR>
map <F4>   :set nolist<CR>
map <F5>   :!column -t<CR>
map <F8>   :call DiffToggle()<CR>
" Reload vimrc configuration
map <F12>   :source ~/.vimrc<CR>

map <Tab>   :tabn<CR>
map <S-Tab> :tabp<CR>
map <C-n>   :tabe.<CR>
map <C-s>   :w!<CR>

"Habilia o copy e paste
map <C-c> "+y<CR>

"Switching paste mode to prevent autoident
set pastetoggle=<F2>

" System_Verilog_Plugin
let mapleader = "_"
nnoremap <leader>i :VerilogFollowInstance<CR>
nnoremap <leader>I :VerilogFollowPort<CR>
nnoremap <leader>u :VerilogGotoInstanceStart<CR>

" Run Ctags
nmap <C-F11> :call RunCtags()<CR>

" Toggle paste mode on and off
map <leader>pp :setlocal paste!<cr>

" Remove the Windows ^M - when the encodings gets messed up
noremap <Leader>m mmHmt:%s/<C-V><cr>//ge<cr>'tzt'm

" Remap <:> to <;> With it, it is possible to execute commands without press shift
nnoremap ; :
